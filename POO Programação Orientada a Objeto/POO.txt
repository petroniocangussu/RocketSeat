É um paradigma de desenvolvimento.
Uma maneira de resolver um problema, um modo de pensar
Não está ligado somente à linguagem de programação, mas a um entendimento amplo e atemporal para criação de softwares

UTILIZAÇÃO NO MERCADO
Na maioria dos sistemas atuais
Varias linguagens como JS, TS, Java, Python
Utilizado por Analistas de Sistemas e não somente por programadores
    * Na fase de levantamento de requisitos de sistemas
    * Via gráficos, desenhos e textos

ONDE E QUANTO UTILIZAR
    * Linguagens
    * Quando quiser aplicação Padrões de Projetos
    * Quando quiser organizar seu código
    * Para melhor entendimento do código, pensando neles como Objetos
    * Quando precisar fazer reuso de código
    * Para separar a complexidade de código, abstrair código e expô-lo de maneira mais simples
    * Para classificar as rotinas e trechos do código

OBJETOS
Todo objeto possui:
    * Propriedades e funcionalidades
    * Estado e Comportamentos
    * Atributos e Métodos

Trazemos a representação de algo do mundo real para Objetos
    * Pessoa - Aluno - Produto - Carrinho de compras

Porém, alguns objetos na programação não são fáceis de identificar, pois são abstratos, exemplo:
    * Autenticação - Autorização

CLASSES
As classes na orientação a objetos funcionam como um molde para os objetos. Os objetos são criados a partir de uma classe e muitos deles podem ser feitos da mesma classe.
Exemplo: Máquina de bisco (classe) - já o biscoito é o objeto
    * Instâncias

Classes em JavaScript
* Syntactical sugar
* Prototype - No JavaScript os objetos são protótipos
Todo objeto criado no JavaScript é um protótipo

ENCAPSULAMENTO
Dirigir carro x conhecer o motor do carro
    * Colocar numa cápsula
    * Agrupamento de funções e variáveis
    * Esconder detalhes da implementação
    * Camada de segurança para os atributos e métodos

HERANÇA
Tudo que tiver no pai, tem no filho também.
Seria uma cópia de atributos e métodos de uma outra classe
Fácil reutilização de código

POLIMORFISMO
Quando um objeto estende de outro (herança) talvez haja necessidade de reescrever características nesse novo objeto.
Recriaremos então um método (ou mais) da classe herdada.
Polimorfismo significa muitas formas.

ABSTRAÇÃO
Template ou identidade de uma classe que será construída no futuro
Atributos e métodos podem ser criados na classe de Abstração (superclasse) mas a implementação dos métodos e atributos só poderá ser feita na classe que irá herdar a abstração
